## +++++++++++++++++++++++++++++++++++++++++++++++++
## <<<<<<<<<<<< PLATFORM CONFIGURATIONS >>>>>>>>>>>>
## +++++++++++++++++++++++++++++++++++++++++++++++++


## ---------------------------
## HAZELCAST configurations ##
## ---------------------------

## Base package to scan for entities. Needed only if Spring data keyvalue is used
#keyval.entity.base=some.package

## Hazelcast configuration xml. Optional. If not provided, will go with default settings from Hazelcast
## For a programmatic quick setting of an IMap, @HzMapConfig annotation can be used. Warning: Annotated map
## configuration would override any other xml configuration on that IMap
keyval.hazelcast.cfg=C:\\Users\\esutdal\\WORK\\workspace\\COX\\spring-data-hazelcast\\test-hz-config.xml

## Unique identifier for this instance in the cluster. Mandatory.
keyval.hazelcast.id=node-un

## Name of the cluster which it tries to join. Optional
#keyval.hazelcast.group=

## Hazelcast system properties. Append the property name to 'keyval.props.'
## Refer to Hazelcast documentations for more details.
#keyval.props.hazelcast.event.thread.count=6
#keyval.props.hazelcast.performance.monitoring.enabled=false
#keyval.props.hazelcast.operation.thread.count=6
#keyval.props.hazelcast.io.thread.count=6

## ------------------------------
## File sharing configurations
## ------------------------------

## The target directory where received files will be stored. Required
files.receive.targetDir=C:\\Users\\esutdal\\WORK\\shared

## Time in seconds to max wait for acquiring a cluster wide lock for distributing a file. 
## Only 1 file sharing process can run at time. Default 10 secs
#files.send.synchronize.secs=

## Time in seconds to max wait for cluster wide acknowledgement prior distributing a file. Default 30 secs
#files.send.requestAck.secs=

## Time in seconds to max wait for cluster wide acknowledgement for receipt of distributed file. Default 10 mins 
#files.send.receiptAck.secs=

## -------------------------------
## REST listener configurations ##
## -------------------------------

## Max connection thread pool size. Default 10
restserver.maxConnection=2

## Default 8991
restserver.port=8992

## Base package to scan for JAX-RS annotated classes
restserver.jaxrs.basePkg=com.reactivetechnologies.analytics.rest

## Root directory for deploying external JAX RS annotated jar files
restserver.jaxrs.extDir=C:\\data

## ------------------------
## LOGGING configuration ##
## ------------------------
logging.level.com.reactivetechnologies=DEBUG


## ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## <<<<<<<<<<<< PLATFORM APPLICATION CONFIGURATION >>>>>>>>>>>>
## ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

## ----------------------
## WEKA configurations ##
## ----------------------

## Fully qualified class name of the classifier
#weka.classifier=weka.classifiers.functions.SPegasos
#weka.classifier=weka.classifiers.functions.Winnow
#weka.classifier=weka.classifiers.bayes.AODEsr
#weka.classifier=weka.classifiers.bayes.AODE
#weka.classifier=weka.classifiers.trees.J48
weka.classifier=weka.classifiers.bayes.NaiveBayes
#weka.classifier=weka.classifiers.functions.SMOreg

## Weka command line options passed to a classifier
## E.g for SMO: -C 1.0 -L 0.0010 -P 1.0E-12 -N 0 -V -1 -W 1 -K \"weka.classifiers.functions.supportVector.PolyKernel -C 250007 -E 1.0\"
#weka.classifier.options=

## For nominal class values, the set of nominals to be expected
weka.classifier.nominals=SPAM,HAM

## Size threshold of training data, when reached, would trigger an incremental build of the classifier while new data is being consumed. Default 1000
#weka.classifier.build.batchSize=

## Interval in seconds, after which periodically it will be checked and new build triggered, if the last build was before maxIdleSecs. Default 1 hour
#weka.classifier.build.intervalSecs=10

## Time threshold, in seconds, when reached would trigger an incremental build of the classifier. Default 1 hour
#weka.classifier.build.maxIdleSecs=10

## Whether to tokenize the data to vectors. This is needed for text classification
weka.classifier.tokenize=true

## Options for Weka StringToWordVector filter
weka.classifier.tokenize.options=

weka.scheduler.combiner=BAGGING
weka.scheduler.combiner.options=
weka.scheduler.combiner.dataFile=classpath:iris.arff

## -------------------------------------------------
## JDBC settings. very basic unpooled connections ##
## -------------------------------------------------
spring.datasource.url=jdbc:mysql://localhost:3306/emt_log
spring.datasource.username=root
spring.datasource.password=root

